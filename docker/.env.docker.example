# =============================================================================
# AI Whisperers Platform - Docker Environment Configuration
# =============================================================================
# SETUP INSTRUCTIONS:
#   1. Copy this file to ../.env.local:
#      cp docker/.env.docker.example .env.local
#
#   2. Edit .env.local with your actual values
#
#   3. NEVER commit .env.local to version control (it's in .gitignore)
#
# SECURITY: Store sensitive values in .env.local, not here
# =============================================================================

# =============================================================================
# Application Configuration
# =============================================================================

# Node environment (development | production | test)
NODE_ENV=development

# Web application port
WEB_PORT=3000

# =============================================================================
# Database Configuration (PostgreSQL)
# =============================================================================

# Database name
POSTGRES_DB=aiwhisperers

# Database user
POSTGRES_USER=aiwhisperers

# Database password (CHANGE THIS for production-like testing)
POSTGRES_PASSWORD=aiwhisperers_dev

# Database port (use 5432 unless you have a conflict)
POSTGRES_PORT=5432

# Full database URL (auto-constructed from above variables)
# For Docker: postgresql://aiwhisperers:aiwhisperers_dev@postgres:5432/aiwhisperers?schema=public
# For Render: Use actual DATABASE_URL from Render dashboard
# DATABASE_URL=postgresql://aiwhisperers:aiwhisperers_dev@postgres:5432/aiwhisperers?schema=public

# =============================================================================
# Redis Configuration
# =============================================================================

# Redis port (use 6379 unless you have a conflict)
REDIS_PORT=6379

# Redis URL (auto-constructed)
# REDIS_URL=redis://redis:6379

# =============================================================================
# Authentication (NextAuth.js)
# =============================================================================

# NextAuth URL (must match WEB_PORT above)
NEXTAUTH_URL=http://localhost:3000

# NextAuth secret (REQUIRED - minimum 32 characters)
# Generate with: openssl rand -base64 32
NEXTAUTH_SECRET=dev_secret_change_in_production_minimum_32_characters_required_for_security

# =============================================================================
# OAuth Providers (Optional)
# =============================================================================
# Configure these if using social login
# Get credentials from provider dashboards

# Google OAuth
# GOOGLE_CLIENT_ID=your-google-client-id.apps.googleusercontent.com
# GOOGLE_CLIENT_SECRET=your-google-client-secret

# GitHub OAuth
# GITHUB_CLIENT_ID=your-github-client-id
# GITHUB_CLIENT_SECRET=your-github-client-secret

# =============================================================================
# Feature Flags
# =============================================================================

# Enable/disable major features
NEXT_PUBLIC_ENABLE_COURSES=true
NEXT_PUBLIC_ENABLE_STRIPE=false
NEXT_PUBLIC_ENABLE_AI_CHAT=false

# =============================================================================
# Payment Integration (Optional - Stripe)
# =============================================================================
# Configure these if using Stripe payments
# Get from: https://dashboard.stripe.com/apikeys

# Stripe secret key (server-side)
# STRIPE_SECRET_KEY=sk_test_...

# Stripe webhook secret (for webhook verification)
# STRIPE_WEBHOOK_SECRET=whsec_...

# Stripe publishable key (client-side)
# NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_...

# =============================================================================
# Email Service (Optional - Resend)
# =============================================================================
# Configure if using email notifications
# Get from: https://resend.com/api-keys

# RESEND_API_KEY=re_...

# =============================================================================
# AI Services (Optional)
# =============================================================================
# Configure if using AI features

# OpenAI API key
# OPENAI_API_KEY=sk-...

# Anthropic API key (Claude)
# ANTHROPIC_API_KEY=sk-ant-...

# =============================================================================
# Management UI Access (Development Only)
# =============================================================================

# PgAdmin credentials
PGADMIN_EMAIL=admin@aiwhisperers.local
PGADMIN_PASSWORD=admin
PGADMIN_PORT=5050

# Redis Commander port
REDIS_COMMANDER_PORT=8081

# =============================================================================
# Render Tunnel Configuration (Optional - Phase 3)
# =============================================================================
# Configure if using Render-Local Data Tunnel for production debugging

# Enable tunnel
# RENDER_TUNNEL_ENABLED=false

# Tunnel authentication secret (minimum 32 characters)
# RENDER_TUNNEL_SECRET=minimum_32_character_secret_for_tunnel_authentication

# Render production URL
# RENDER_EXTERNAL_URL=https://your-app.onrender.com

# =============================================================================
# Public URLs (Auto-configured)
# =============================================================================
# These are constructed from other variables above

NEXT_PUBLIC_SITE_URL=http://localhost:3000

# =============================================================================
# Advanced Configuration (Usually don't need to change)
# =============================================================================

# Disable Next.js telemetry
NEXT_TELEMETRY_DISABLED=1

# Enable file watching in Docker (required for hot-reload)
# CHOKIDAR_USEPOLLING=true
# WATCHPACK_POLLING=true
