# Docker Compose configuration for local development
# Provides development parity with Render deployment

version: '3.8'

services:
  # Main Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: ai-whisperers-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1
      # Add your environment variables here
      # - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      # - NEXTAUTH_URL=${NEXTAUTH_URL}
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      # - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - .env
    volumes:
      # Hot-reload for development (optional - comment out for production-like testing)
      # - ./src:/app/src
      # - ./public:/app/public
      # Persist node_modules
      - node_modules:/app/node_modules
    networks:
      - ai-whisperers-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development server with hot-reload (alternative to production build)
  dev:
    image: node:22.16.0-alpine
    container_name: ai-whisperers-dev
    working_dir: /app
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - NEXT_TELEMETRY_DISABLED=1
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: sh -c "npm install && npm run dev"
    networks:
      - ai-whisperers-network
    profiles:
      - dev
    restart: unless-stopped

volumes:
  node_modules:
    driver: local

networks:
  ai-whisperers-network:
    driver: bridge
